#!/usr/bin/env python
################################################################################
# extract_somagic_firmware                                                     #
#                                                                              #
# Extract the EasyCAP Somagic firmware from a Windows driver file.             #
# ##############################################################################
#
# Copyright 2011 Jeffry Johnston 
# 
# This file is part of somagic_dc60
# http://code.google.com/p/easycap-somagic-linux/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

import sys, zlib, os.path

# constants
PROGRAM_NAME = "extract_somagic_firmware"
OUTPUT_FILENAME = "somagic_firmware.bin"
FIRMWARE_MAGIC = "\x0c\x94\xce\x00"
FIRMWARE_LENGTH = 7502
FIRMWARE_CRC32 = 881457019

# process command line
if len(sys.argv) != 3:
  print >> sys.stderr, "Usage:\n  " + PROGRAM_NAME + \
                       " FILENAME OUTPUT_DIRECTORY\n\nExample:\n  " + \
                       PROGRAM_NAME + " SmiUsbGrabber3C.sys /lib/firmware"
  sys.exit(1)
infile = open(sys.argv[1], "r")
output_path = os.path.join(sys.argv[2], OUTPUT_FILENAME)

# search for the firmware magic
last4 = "    "
firmware_found = False
while not firmware_found:
  # read next byte from file
  b = infile.read(1)

  # check EOF
  if len(b) == 0:
    # at EOF, abort
    break

  # roll byte into string
  last4 = last4[1:] + b

  # check firmware magic
  if last4 == FIRMWARE_MAGIC:
    # found, save file position
    pos = infile.tell()
 
    # read rest of firmware
    firmware = last4 + infile.read(FIRMWARE_LENGTH - 4)

    # check crc32
    if zlib.crc32(firmware) == FIRMWARE_CRC32:
      # crc32 matched
      firmware_found = True

      # write firmware file
      outfile = open(output_path, "w")
      outfile.write(firmware)
      outfile.close()
    else:
      # false positive, return to previous file position and keep looking
      infile.seek(pos)
infile.close()

# give status report
if firmware_found:
  print >> sys.stderr, "Firmware written to '" + output_path + "'"
else:
  print >> sys.stderr, "Somagic firmware was not found"
  sys.exit(1)

