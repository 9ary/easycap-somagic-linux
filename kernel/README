WARNING:
This software is an alpha version, and may crash or permanently damage your
computer and/or USB devices.

---------------------------------------------------------------------------

This is the first part of a USB driver implementation for the Easycap DC60
video capture device with USB id 1c88:0007

This part of the driver uploads a firmware for the device using the kernel 
firmware API.

To use this driver you need a copy of the firmware file. Due to legal
complications, the firmware cannot be distributed with this package, but it
can be extracted from UsbSnoop logs, that you can generate when you plug
the device into a Windows machine. 

Your log file should include many outgoing packets called "Control_URB".
The packets are 128 Bytes long, and you are interested in the last 62 bytes
of each packet.

Example:
0000  80 e6 ee 2e 01 88 ff ff 53 02 00 4f 02 00 00 00   ........S..O....
0010  e3 e2 dc 4e 00 00 00 00 d0 41 0f 00 8d ff ff ff   ...N.....A......
0020  40 00 00 00 40 00 00 00 40 01 05 00 00 00 40 00   @...@...@.....@.
0030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0040  05 ff 0c 94 ce 00 ff ff ff ff ff ff ff ff ff ff   ................
0050  ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff   ................
0060  ff ff ff ff ff ff ff ff ff ff ff ff ff ff 0c 94   ................
0070  72 06 ff ff ff ff ff ff ff ff ff ff ff ff ff ff   r...............

You will have to extract the bytes from offset 0x0042 to the end of each
packet. You can identify the correct location by the two bytes "0x05 0xff",
and extract the rest of the bytes.

This should result in a file 7502 bytes in size. The resulting firmware
file size must be evenly dividable by 62.

The firmware file used for development has the following md5sum:
90f78491e831e8db44cfdd6204a2b602
The Windows driver CD used for development was Version 2.1C.

The firmware should be named somagic_firmware.bin, and placed in
/lib/firmware

USAGE:
make
sudo insmod somagic.ko [register_capture_device=0]

If you set register_capture_device=0 (defaults to 1),
the driver will only upload the firmware.
Use this option if you want to use the capture program.

This has been tested, and is working on an OpenSUSE 11.4 (Tumbleweed) box,
with kernel 3.1.0-46-desktop

TODO:
* Make part 2 of this driver, and link it with the V4L subsystem.
* Make a script to parse the firmware out of a Wireshark log.
* Reverse-engeneer the firmware.


Jon Arne JÃ¸rgensen <jonjon.arnearne@gmail.com>

