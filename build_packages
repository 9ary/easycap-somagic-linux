#!/bin/sh
################################################################################
# build_packages                                                               #
#                                                                              #
# Perform basic sanity checks and then create release package set              #
# ##############################################################################
#
# Copyright 2012 Jeffry Johnston 
# 
# This file is part of somagic_easycap
# http://code.google.com/p/easycap-somagic-linux/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

USER="somagic-init somagic-capture"
USERDIR=`readlink -f user`
USERPKG="somagic-easycap"
TOOLS="somagic-extract-firmware"
TOOLSDIR=`readlink -f tools/somagic-extract-firmware`
TOOLSPKG="somagic-easycap-tools"
ARCH=`dpkg --print-architecture`

# verify that the version number has been updated for each program and manual
check_version () {
  # input: 1=list of program names, 2=path, 3=expected version
  for PROGRAM in $1
  do
    # check program
    grep -q \#define\ VERSION\ \"$3\" $2/$PROGRAM.c
    if [ $? -ne 0 ] ; then
      echo "Error: Update version of program \"$2/$PROGRAM.c\" to \"$3\"."
      exit 1
    fi

    # check manual
    grep -q \"$PROGRAM\ $3\" $2/man/$PROGRAM.1
    if [ $? -ne 0 ] ; then
      echo "Error: Update version of manual \"$2/man/$PROGRAM.1\" to \"$3\"."
      exit 1
    fi
  done

  # check changelog
  grep -q \($3\) $2/debian/changelog
  if [ $? -ne 0 ] ; then
    echo "Error: Add entry to changelog \"$2/debian/changelog\" for \"$3\"."
    exit 1
  fi
}

# parse command line arguments
VERSION=$1
if [ "$VERSION" = "" ] ; then
  echo "Usage: $0 VERSION"
  echo "Example: $0 1.0"
  exit 1
fi

# verify current directory
CURDIR=`readlink -f $PWD`
PROGDIR=`readlink -f \`dirname $0\``
if [ "$CURDIR" != "$PROGDIR" ] ; then
  echo "Error: Run this script from the root of the easycap-somagic-linux git tree."
  exit 1
fi

# verify git tree is committed and up-to-date
git diff --exit-code
if [ $? -ne 0 ] ; then
  echo "Error: There are uncommitted local changes. Use \"git commit -a\" and \"git push\"."
  exit 1
fi
git pull
if [ $? -ne 0 ] ; then
  echo "Error: There was a problem updating the source tree."
  exit 1
fi

check_version "$USER" $USERDIR $VERSION
check_version "$TOOLS" $TOOLSDIR $VERSION

# build packages
cd $USERDIR
debuild -us -uc
rm ../$USERPKG\_$VERSION\_$ARCH.build
rm ../$USERPKG\_$VERSION\_$ARCH.changes
rm ../$USERPKG\_$VERSION.dsc
mv ../$USERPKG\_$VERSION\_$ARCH.deb $PROGDIR
mv ../$USERPKG\_$VERSION.tar.gz $PROGDIR
cd $TOOLSDIR
debuild -us -uc
rm ../$TOOLSPKG\_$VERSION\_$ARCH.build
rm ../$TOOLSPKG\_$VERSION\_$ARCH.changes
rm ../$TOOLSPKG\_$VERSION.dsc
mv ../$TOOLSPKG\_$VERSION\_$ARCH.deb $PROGDIR
mv ../$TOOLSPKG\_$VERSION.tar.gz $PROGDIR

